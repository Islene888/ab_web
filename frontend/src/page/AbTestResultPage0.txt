// src/pages/AbTestResultPage.jsx

import React, { useState, useMemo } from 'react';
import { useSearchParams } from 'react-router-dom';
import { Spin, message } from 'antd';
import SearchForm from '../components/AbTest/SearchForm';
// 确保从正确的路径导入
import { AbTestApiProcess, AbTestTrendChart } from '../components/common/AbTestApiProcess';

export default function AbTestResultPage() {
  const [params, setParams] = useState(null);
  const [loading, setLoading] = useState(false);
  const [searchParams] = useSearchParams();

  const initialValues = useMemo(() => ({
    experiment: searchParams.get('experiment') || '',
    phase: Number(searchParams.get('phase') || 0),
  }), [searchParams]);

  // 搜索表单提交
  const handleSearch = async (values) => {
    if (!values.daterange || !values.daterange[0] || !values.daterange[1]) {
      message.error('请选择完整的日期区间');
      return;
    }
    setLoading(true);

    // --- 关键修改：增加 mode 判断逻辑 ---
    let mode = 'single'; // 默认为单指标模式
    // 假设“All Metrics”选项的值为 'all'
    if (Array.isArray(values.metric) && values.metric.includes('all')) {
      mode = 'all';
    }
    // --- 修改结束 ---

    setParams({
      ...values,
      startDate: values.daterange[0].format('YYYY-MM-DD'),
      endDate: values.daterange[1].format('YYYY-MM-DD'),
      mode: mode, // 将计算好的 mode 存入 state
    });

    setLoading(false);
  };

  return (
    <div style={{ background: '#18192a', minHeight: '100vh', padding: 32 }}>
      <h1 style={{ color: '#fff', textAlign: 'center', marginBottom: 24 }}>
        AB Test Results
      </h1>

      <SearchForm
        initialExperiment={initialValues.experiment}
        initialPhaseIdx={initialValues.phase}
        onSearch={handleSearch}
      />

      {loading && <Spin style={{ display: 'block', margin: 40 }} />}

      {!loading && params && (
        <>
          <div style={{ marginTop: 36 }}>
            {/* --- 关键修改：补全所有必需的 props --- */}
            <AbTestApiProcess
              experimentName={params.experimentName}
              startDate={params.startDate}
              endDate={params.endDate}
              metric={params.metric}
              category={params.category} // <-- 补上 category
              mode={params.mode}         // <-- 补上 mode
            />
            {/* --- 修改结束 --- */}
          </div>

          <div style={{ width: "100%", height: 2, background: "#fff", opacity: 0.11, margin: "24px 0", borderRadius: 2 }} />

          <div>
            <AbTestTrendChart
              experimentName={params.experimentName}
              startDate={params.startDate}
              endDate={params.endDate}
              // 趋势图总是需要一个明确的指标
              metric={Array.isArray(params.metric) ? params.metric[0] : params.metric}
            />
          </div>
        </>
      )}
    </div>
  );
}